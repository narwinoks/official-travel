{
    "sourceFile": "database/seeders/LaratrustSeeder.php",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 1,
            "patches": [
                {
                    "date": 1666277560646,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1666277570307,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -59,9 +59,9 @@\n \n             // Attach all permissions to the role\n             $role->permissions()->sync($permissions);\n \n-            if (Config::get('laratrust_seeder.create_user)) {\n+            if (tr)) {\n                 $this->command->info(\"Creating '{$key}' user\");\n                 // Create default user for each role\n                 $user = \\App\\Models\\User::create([\n                     'name' => ucwords(str_replace('_', ' ', $key)),\n"
                }
            ],
            "date": 1666277560646,
            "name": "Commit-0",
            "content": "<?php\n\nnamespace Database\\Seeders;\n\nuse Illuminate\\Support\\Facades\\Schema;\nuse Illuminate\\Database\\Seeder;\nuse Illuminate\\Support\\Facades\\DB;\nuse Illuminate\\Support\\Facades\\Config;\n\nclass LaratrustSeeder extends Seeder\n{\n    /**\n     * Run the database seeds.\n     *\n     * @return void\n     */\n    public function run()\n    {\n        $this->truncateLaratrustTables();\n\n        $config = Config::get('laratrust_seeder.roles_structure');\n\n        if ($config === null) {\n            $this->command->error(\"The configuration has not been published. Did you run `php artisan vendor:publish --tag=\\\"laratrust-seeder\\\"`\");\n            $this->command->line('');\n            return false;\n        }\n\n        $mapPermission = collect(config('laratrust_seeder.permissions_map'));\n\n        foreach ($config as $key => $modules) {\n\n            // Create a new role\n            $role = \\App\\Models\\Role::firstOrCreate([\n                'name' => $key,\n                'display_name' => ucwords(str_replace('_', ' ', $key)),\n                'description' => ucwords(str_replace('_', ' ', $key))\n            ]);\n            $permissions = [];\n\n            $this->command->info('Creating Role '. strtoupper($key));\n\n            // Reading role permission modules\n            foreach ($modules as $module => $value) {\n\n                foreach (explode(',', $value) as $p => $perm) {\n\n                    $permissionValue = $mapPermission->get($perm);\n\n                    $permissions[] = \\App\\Models\\Permission::firstOrCreate([\n                        'name' => $module . '-' . $permissionValue,\n                        'display_name' => ucfirst($permissionValue) . ' ' . ucfirst($module),\n                        'description' => ucfirst($permissionValue) . ' ' . ucfirst($module),\n                    ])->id;\n\n                    $this->command->info('Creating Permission to '.$permissionValue.' for '. $module);\n                }\n            }\n\n            // Attach all permissions to the role\n            $role->permissions()->sync($permissions);\n\n            if (Config::get('laratrust_seeder.create_user)) {\n                $this->command->info(\"Creating '{$key}' user\");\n                // Create default user for each role\n                $user = \\App\\Models\\User::create([\n                    'name' => ucwords(str_replace('_', ' ', $key)),\n                    'email' => $key.'@app.com',\n                    'password' => bcrypt('password')\n                ]);\n                $user->attachRole($role);\n            }\n\n        }\n    }\n\n    /**\n     * Truncates all the laratrust tables and the users table\n     *\n     * @return  void\n     */\n    public function truncateLaratrustTables()\n    {\n        $this->command->info('Truncating User, Role and Permission tables');\n        Schema::disableForeignKeyConstraints();\n\n        DB::table('permission_role')->truncate();\n        DB::table('permission_user')->truncate();\n        DB::table('role_user')->truncate();\n\n        if (Config::get('laratrust_seeder.truncate_tables')) {\n            DB::table('roles')->truncate();\n            DB::table('permissions')->truncate();\n            \n            if (Config::get('laratrust_seeder.create_users')) {\n                $usersTable = (new \\App\\Models\\User)->getTable();\n                DB::table($usersTable)->truncate();\n            }\n        }\n\n        Schema::enableForeignKeyConstraints();\n    }\n}\n"
        }
    ]
}